(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{669:function(s,a,t){"use strict";t.r(a);var n=t(11),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"_1-介绍。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-介绍。"}},[s._v("#")]),s._v(" 1，介绍。")]),s._v(" "),t("p",[s._v("官网："),t("a",{attrs:{href:"http://supervisord.org/",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://supervisord.org"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("Supervisor 是用 Python 开发的一套通用的进程管理程序，能将一个普通的命令行进程变为后台 daemon，并监控进程状态，异常退出时能自动重启。")]),s._v(" "),t("p",[s._v("它是通过 fork/exec 的方式把这些被管理的进程当作 supervisor 的子进程来启动，这样只要在 supervisor 的配置文件中，把要管理的进程的可执行文件的路径写进去即可。也实现当子进程挂掉的时候，父进程可以准确获取子进程挂掉的信息的，可以选择是否自己启动和报警。supervisor 还提供了一个功能，可以为 supervisord 或者每个子进程，设置一个非 root 的 user，这个 user 就可以管理它对应的进程。")]),s._v(" "),t("h2",{attrs:{id:"_2-安装。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-安装。"}},[s._v("#")]),s._v(" 2，安装。")]),s._v(" "),t("p",[s._v("这里我"),t("code",[s._v("推荐使用easy_install")]),s._v("的方式安装，因为这种方式安装的自定义性比较强，安装也比较方便，虽然网上有不少地方也介绍 yum 方式的安装，但是据我个人的体验来看，不如这种安装方式来的好。")]),s._v(" "),t("p",[s._v("而且这种方式安装以及使用，是适用于 CentOS-6 以及 CenOS-7 两个大系统版本的。")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("yum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y python-setuptools.noarch \neasy_install supervisor \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("如果两条命令都执行没有问题，就安装成功了。")]),s._v(" "),t("p",[s._v("也可以通过如下指令测试安装是否成功：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@moban ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$echo_supervisord_conf")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" Sample supervisor config file.\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" For "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" information on the config file, please see:\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" http://supervisord.org/configuration.html\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" Notes:\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  - Shell expansion "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"~"')]),s._v(" or "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" is not supported.  Environment\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    variables can be expanded using this syntax: "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(ENV_HOME)s"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  - Quotes around values are not supported, except "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" of\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    the "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("environment")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" options as shown below.\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  - Comments must have a leading space: "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a=b ;comment"')]),s._v(" not "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a=b;comment"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  - Command will be truncated "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" it looks like a config "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" comment, e.g.\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"command=bash -c 'foo ; bar'\"")]),s._v(" will truncate to "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"command=bash -c \'foo "')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("unix_http_server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("file")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/tmp/supervisor.sock   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" the path to the socket "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("chmod")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("0700                 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" socket "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" mode "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default 0700"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("chown")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("nobody:nogroup       "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" socket "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" uid:gid owner\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("username")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("user              "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" default is no username "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("open server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("password")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v("               "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" default is no password "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("open server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("inet_http_server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" inet "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TCP"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" server disabled by default\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:9001        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" ip_address:port specifier, *:port "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" all iface\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("username")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("user              "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" default is no username "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("open server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("password")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v("               "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" default is no password "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("open server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("supervisord"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("logfile")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/tmp/supervisord.log "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" main log "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" default "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$CWD")]),s._v("/supervisord.log\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("logfile_maxbytes")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("50MB        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" max main logfile bytes b4 rotation"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" default 50MB\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("logfile_backups")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("           "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# of main logfile backups; 0 means none, default 10")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("loglevel")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("info                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" log level"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" default info"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" others: debug,warn,trace\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("pidfile")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/tmp/supervisord.pid "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" supervisord pidfile"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" default supervisord.pid\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("nodaemon")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false               "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" start "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" foreground "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" default "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("minfds")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),s._v("                  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" min. avail startup "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" descriptors"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" default "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("minprocs")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v("                 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" min. avail process descriptors"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("default "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("umask")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("022                   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" process "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" creation "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("umask")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" default 022\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("user")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("chrism                 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" default is current user, required "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" root\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("identifier")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("supervisor       "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" supervisord identifier, default is "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'supervisor'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("directory")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/tmp              "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" default is not to "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" during start\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("nocleanup")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true              "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" don"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'t clean up tempfiles at start; default false\n;childlogdir=/tmp            ; '")]),s._v("AUTO"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\' child log dir, default $TEMP\n;environment=KEY="value"     ; key value pairs to add to environment\n;strip_ansi=false            ; strip ansi escape codes in logs; def. false\n \n; The rpcinterface:supervisor section must remain in the config file for\n; RPC (supervisorctl/web interface) to work.  Additional interfaces may be\n; added by defining them in separate [rpcinterface:x] sections.\n \n[rpcinterface:supervisor]\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n \n; The supervisorctl section configures how supervisorctl will connect to\n; supervisord.  configure it match the settings in either the unix_http_server\n; or inet_http_server section.\n \n[supervisorctl]\nserverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket\n;serverurl=http://127.0.0.1:9001 ; use an http:// url to specify an inet socket\n;username=chris              ; should be same as in [*_http_server] if set\n;password=123                ; should be same as in [*_http_server] if set\n;prompt=mysupervisor         ; cmd line prompt (default "supervisor")\n;history_file=~/.sc_history  ; use readline history if available\n \n; The sample program section below shows all possible program subsection values.\n; Create one or more \'')]),s._v("real"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("' program: sections to be able to control them under\n; supervisor.\n \n;[program:theprogramname]\n;command=/bin/cat              ; the program (relative uses PATH, can take args)\n;process_name=%(program_name)s ; process_name expr (default %(program_name)s)\n;numprocs=1                    ; number of processes copies to start (def 1)\n;directory=/tmp                ; directory to cwd to before exec (def no cwd)\n;umask=022                     ; umask for process (default None)\n;priority=999                  ; the relative start priority (default 999)\n;autostart=true                ; start at supervisord start (default: true)\n;startsecs=1                   ; # of secs prog must stay up to be running (def. 1)\n;startretries=3                ; max # of serial start failures when starting (default 3)\n;autorestart=unexpected        ; when to restart if exited after running (def: unexpected)\n;exitcodes=0,2                 ; '")]),s._v("expected"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("' exit codes used with autorestart (default 0,2)\n;stopsignal=QUIT               ; signal used to kill process (default TERM)\n;stopwaitsecs=10               ; max num secs to wait b4 SIGKILL (default 10)\n;stopasgroup=false             ; send stop signal to the UNIX process group (default false)\n;killasgroup=false             ; SIGKILL the UNIX process group (def false)\n;user=chrism                   ; setuid to this UNIX account to run the program\n;redirect_stderr=true          ; redirect proc stderr to stdout (default false)\n;stdout_logfile=/a/path        ; stdout log path, NONE for none; default AUTO\n;stdout_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)\n;stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)\n;stdout_capture_maxbytes=1MB   ; number of bytes in '")]),s._v("capturemode"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("' (default 0)\n;stdout_events_enabled=false   ; emit events on stdout writes (default false)\n;stderr_logfile=/a/path        ; stderr log path, NONE for none; default AUTO\n;stderr_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)\n;stderr_logfile_backups=10     ; # of stderr logfile backups (0 means none, default 10)\n;stderr_capture_maxbytes=1MB   ; number of bytes in '")]),s._v("capturemode"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\' (default 0)\n;stderr_events_enabled=false   ; emit events on stderr writes (default false)\n;environment=A="1",B="2"       ; process environment additions (def no adds)\n;serverurl=AUTO                ; override serverurl computation (childutils)\n \n; The sample eventlistener section below shows all possible eventlistener\n; subsection values.  Create one or more \'')]),s._v("real"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("' eventlistener: sections to be\n; able to handle event notifications sent by supervisord.\n \n;[eventlistener:theeventlistenername]\n;command=/bin/eventlistener    ; the program (relative uses PATH, can take args)\n;process_name=%(program_name)s ; process_name expr (default %(program_name)s)\n;numprocs=1                    ; number of processes copies to start (def 1)\n;events=EVENT                  ; event notif. types to subscribe to (req'")]),s._v("d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("buffer_size")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" event buffer queue size "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("directory")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/tmp                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" directory to cwd to before "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("def no cwd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("umask")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("022                     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("umask")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" process "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default None"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("priority")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("-1                   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" the relative start priority "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default -1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("autostart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" start at supervisord start "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("startsecs")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("                   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# of secs prog must stay up to be running (def. 1)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("startretries")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" max "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# of serial start failures when starting (default 3)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("autorestart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("unexpected        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" autorestart "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" exited after running "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("def: unexpected"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("exitcodes")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0,2")]),s._v("                 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'expected'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" codes used with autorestart "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0,2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stopsignal")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("QUIT               "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" signal used to "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" process "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("TERM")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stopwaitsecs")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("               "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" max num secs to "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wait")]),s._v(" b4 SIGKILL "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stopasgroup")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false             "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" send stop signal to the UNIX process group "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("killasgroup")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false             "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" SIGKILL the UNIX process group "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("def "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("user")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("chrism                   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" setuid to this UNIX account to run the program\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("redirect_stderr")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false         "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("redirect_stderr")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true is not allowed "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" eventlisteners\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stdout_logfile")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/a/path        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" stdout log path, NONE "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" none"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" default AUTO\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stdout_logfile_maxbytes")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("1MB   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" max "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# logfile bytes b4 rotation (default 50MB)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stdout_logfile_backups")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# of stdout logfile backups (0 means none, default 10)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stdout_events_enabled")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" emit events on stdout writes "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stderr_logfile")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/a/path        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" stderr log path, NONE "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" none"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" default AUTO\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stderr_logfile_maxbytes")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("1MB   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" max "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# logfile bytes b4 rotation (default 50MB)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stderr_logfile_backups")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# of stderr logfile backups (0 means none, default 10)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stderr_events_enabled")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" emit events on stderr writes "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("environment")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("A"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),s._v(",B"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2"')]),s._v("       "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" process environment additions\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("serverurl")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("AUTO                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" override serverurl computation "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("childutils"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" The sample group section below shows all possible group values.  Create one\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" or "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'real'")]),s._v(" group: sections to create "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"heterogeneous"')]),s._v(" process groups.\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("group:thegroupname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("programs")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("progname1,progname2  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" each refers to "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'x'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("program:x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" definitions\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("priority")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("999")]),s._v("                  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" the relative start priority "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("999")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" The "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("include"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" section can just contain the "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"files"')]),s._v(" setting.  This\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" setting can list multiple files "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("separated by whitespace or\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" newlines"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".  It can also contain wildcards.  The filenames are\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" interpreted as relative to this file.  Included files *cannot*\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" include files themselves.\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("include"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("files "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" relative/directory/*.ini\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br"),t("span",{staticClass:"line-number"},[s._v("72")]),t("br"),t("span",{staticClass:"line-number"},[s._v("73")]),t("br"),t("span",{staticClass:"line-number"},[s._v("74")]),t("br"),t("span",{staticClass:"line-number"},[s._v("75")]),t("br"),t("span",{staticClass:"line-number"},[s._v("76")]),t("br"),t("span",{staticClass:"line-number"},[s._v("77")]),t("br"),t("span",{staticClass:"line-number"},[s._v("78")]),t("br"),t("span",{staticClass:"line-number"},[s._v("79")]),t("br"),t("span",{staticClass:"line-number"},[s._v("80")]),t("br"),t("span",{staticClass:"line-number"},[s._v("81")]),t("br"),t("span",{staticClass:"line-number"},[s._v("82")]),t("br"),t("span",{staticClass:"line-number"},[s._v("83")]),t("br"),t("span",{staticClass:"line-number"},[s._v("84")]),t("br"),t("span",{staticClass:"line-number"},[s._v("85")]),t("br"),t("span",{staticClass:"line-number"},[s._v("86")]),t("br"),t("span",{staticClass:"line-number"},[s._v("87")]),t("br"),t("span",{staticClass:"line-number"},[s._v("88")]),t("br"),t("span",{staticClass:"line-number"},[s._v("89")]),t("br"),t("span",{staticClass:"line-number"},[s._v("90")]),t("br"),t("span",{staticClass:"line-number"},[s._v("91")]),t("br"),t("span",{staticClass:"line-number"},[s._v("92")]),t("br"),t("span",{staticClass:"line-number"},[s._v("93")]),t("br"),t("span",{staticClass:"line-number"},[s._v("94")]),t("br"),t("span",{staticClass:"line-number"},[s._v("95")]),t("br"),t("span",{staticClass:"line-number"},[s._v("96")]),t("br"),t("span",{staticClass:"line-number"},[s._v("97")]),t("br"),t("span",{staticClass:"line-number"},[s._v("98")]),t("br"),t("span",{staticClass:"line-number"},[s._v("99")]),t("br"),t("span",{staticClass:"line-number"},[s._v("100")]),t("br"),t("span",{staticClass:"line-number"},[s._v("101")]),t("br"),t("span",{staticClass:"line-number"},[s._v("102")]),t("br"),t("span",{staticClass:"line-number"},[s._v("103")]),t("br"),t("span",{staticClass:"line-number"},[s._v("104")]),t("br"),t("span",{staticClass:"line-number"},[s._v("105")]),t("br"),t("span",{staticClass:"line-number"},[s._v("106")]),t("br"),t("span",{staticClass:"line-number"},[s._v("107")]),t("br"),t("span",{staticClass:"line-number"},[s._v("108")]),t("br"),t("span",{staticClass:"line-number"},[s._v("109")]),t("br"),t("span",{staticClass:"line-number"},[s._v("110")]),t("br"),t("span",{staticClass:"line-number"},[s._v("111")]),t("br"),t("span",{staticClass:"line-number"},[s._v("112")]),t("br"),t("span",{staticClass:"line-number"},[s._v("113")]),t("br"),t("span",{staticClass:"line-number"},[s._v("114")]),t("br"),t("span",{staticClass:"line-number"},[s._v("115")]),t("br"),t("span",{staticClass:"line-number"},[s._v("116")]),t("br"),t("span",{staticClass:"line-number"},[s._v("117")]),t("br"),t("span",{staticClass:"line-number"},[s._v("118")]),t("br"),t("span",{staticClass:"line-number"},[s._v("119")]),t("br"),t("span",{staticClass:"line-number"},[s._v("120")]),t("br"),t("span",{staticClass:"line-number"},[s._v("121")]),t("br"),t("span",{staticClass:"line-number"},[s._v("122")]),t("br"),t("span",{staticClass:"line-number"},[s._v("123")]),t("br"),t("span",{staticClass:"line-number"},[s._v("124")]),t("br"),t("span",{staticClass:"line-number"},[s._v("125")]),t("br"),t("span",{staticClass:"line-number"},[s._v("126")]),t("br"),t("span",{staticClass:"line-number"},[s._v("127")]),t("br"),t("span",{staticClass:"line-number"},[s._v("128")]),t("br"),t("span",{staticClass:"line-number"},[s._v("129")]),t("br"),t("span",{staticClass:"line-number"},[s._v("130")]),t("br"),t("span",{staticClass:"line-number"},[s._v("131")]),t("br"),t("span",{staticClass:"line-number"},[s._v("132")]),t("br"),t("span",{staticClass:"line-number"},[s._v("133")]),t("br"),t("span",{staticClass:"line-number"},[s._v("134")]),t("br"),t("span",{staticClass:"line-number"},[s._v("135")]),t("br"),t("span",{staticClass:"line-number"},[s._v("136")]),t("br"),t("span",{staticClass:"line-number"},[s._v("137")]),t("br"),t("span",{staticClass:"line-number"},[s._v("138")]),t("br"),t("span",{staticClass:"line-number"},[s._v("139")]),t("br"),t("span",{staticClass:"line-number"},[s._v("140")]),t("br"),t("span",{staticClass:"line-number"},[s._v("141")]),t("br"),t("span",{staticClass:"line-number"},[s._v("142")]),t("br"),t("span",{staticClass:"line-number"},[s._v("143")]),t("br"),t("span",{staticClass:"line-number"},[s._v("144")]),t("br"),t("span",{staticClass:"line-number"},[s._v("145")]),t("br"),t("span",{staticClass:"line-number"},[s._v("146")]),t("br"),t("span",{staticClass:"line-number"},[s._v("147")]),t("br"),t("span",{staticClass:"line-number"},[s._v("148")]),t("br"),t("span",{staticClass:"line-number"},[s._v("149")]),t("br")])]),t("h2",{attrs:{id:"_3-创建主配置。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-创建主配置。"}},[s._v("#")]),s._v(" 3，创建主配置。")]),s._v(" "),t("p",[s._v("1，创建 supervisor 配置文件目录 。")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -m "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("755")]),s._v(" -p /etc/supervisor\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("2，创建主配置文件。")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("echo_supervisord_conf "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/etc/supervisor/supervisord.conf\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("3，创建项目配置文件目录。")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -m "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("755")]),s._v(" /etc/supervisor/conf.d\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("配置文件的详细解析放在最后。")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://t.eryajf.net/imgs/2021/09/831780f4a899d3b8.jpg",alt:"image"}})]),s._v(" "),t("h2",{attrs:{id:"_4-配置管理-tomcat-进程。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-配置管理-tomcat-进程。"}},[s._v("#")]),s._v(" 4，配置管理 tomcat 进程。")]),s._v(" "),t("p",[s._v("主机上安装的 tomcat 进程，无论怎么操作都无法开机自启动，那么现在有了这个进程管理工具，就可以实现对 tomcat 进程的管理了。")]),s._v(" "),t("p",[s._v("进程管理配置参数，不建议全都写在"),t("code",[s._v("supervisord.conf")]),s._v("文件中，应该每个进程写一个配置文件放在 include 指定的目录下包含进 supervisord.conf 文件中。")]),s._v(" "),t("p",[s._v("所以此时应该先修改一下这个参数：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/supervisor/supervisord.conf\n \n直接跳到文本最后，删掉前边的注释（分号）。然后更改如下：\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("include"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nfiles "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" /etc/supervisor/conf.d/*.ini\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("然后创建 tomcat 的配置文件。")]),s._v(" "),t("p",[s._v("需要注意的地方 ====》所有要管理的进程都不能开启后台模式，只能使用前台模式进行配置；使用后台模式会出现一直重新开启新进程的情况。")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@fbtest conf.d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$cat")]),s._v(" tomcat.ini\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("program:tomcat"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("command")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/local/tomcat/bin/catalina.sh run\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stdout_logfile")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/local/tomcat/logs/catalina.out\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stderr_logfile")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/local/tomcat/logs/catalina.out\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("environment")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("JAVA_HOME"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/local/jdk1.8.0_144"')]),s._v(",JAVA_BIN"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/local/jdk1.8.0_144/bin"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("autorestart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("startsecs")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("priority")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stopasgroup")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("killasgroup")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("注意：我当时写 tomcat 启动命令的时候，使用了 / usr/local/tomcat_adminB/bin/startup.sh 这个命令，结果发现，不知道什么原因，竟然会一次启动四个 tomcat 进程，也是挺诡异的。\n还有，因为使用"),t("code",[s._v("catalina.sh run")]),s._v("的方式启动是一种前台的启动方式，因此日志并不会输出到对应的 tomcat 日志里，当中有两句定义日志的指令，其中生效的是"),t("code",[s._v("stderr_logfile")]),s._v("，也就是说，是这条指令，使得尽管我们在前台启动的 tomcat 应用，依然会将日志输出到"),t("code",[s._v("catalina.out")]),s._v("里边。")]),s._v(" "),t("p",[s._v("还可以创建一个管理 nginx 的配置文件（也是要关闭后台模式，在执行的命令后面添加 - g “daemon off;”）。")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@fbtest conf.d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$cat")]),s._v(" nginx.ini\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("program:nginx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("command")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/local/nginx/sbin/nginx -g "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'daemon off;'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("priority")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("autostart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("startretries")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("autorestart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("user")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("root\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("还可以创建更多的管理服务的文件，这些配置依据文末的讲解，都可以非常容易的配置出来，不过有一些属性则需要自己去进行调试，然后来适应实际的工作需求，比如我在配置 tomcat 的配置时，就把自动重启的功能给关闭了，因为在测试环境需要经常发布，发布就免不了重启服务，如果这个地方开启自动重启，那么很容易会在发布的时候出现各种意想不到的情况。")]),s._v(" "),t("h2",{attrs:{id:"_5-启动-supervisor。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-启动-supervisor。"}},[s._v("#")]),s._v(" 5，启动 supervisor。")]),s._v(" "),t("p",[s._v("通过启动命令加载配置文件。")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("supervisord -c /etc/supervisor/supervisord.conf\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@moban ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$supervisorctl")]),s._v("\ntomcat                           FATAL     Exited too quickly "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("process log may have details"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nsupervisor"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("如果此时报错，那么 google 一下报的错误，很容易解决。")]),s._v(" "),t("p",[s._v("以上两个命令说明：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("supervisord")]),s._v(" : supervisor 的服务器端部分，用于 supervisor 启动。")]),s._v(" "),t("li",[t("code",[s._v("supervisorctl")]),s._v("：启动 supervisor 的命令行窗口，在该命令行中可执行 start、stop、status、reload 等操作。")])]),s._v(" "),t("p",[s._v("注意：每次修改配置文件后需进入 supervisorctl，执行 reload， 改动部分才能生效。")]),s._v(" "),t("h3",{attrs:{id:"_1-创建-supervisor-服务管理文件。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建-supervisor-服务管理文件。"}},[s._v("#")]),s._v(" 1，创建 supervisor 服务管理文件。")]),s._v(" "),t("p",[s._v("此时可以通过查看 tomcat 的日志，来判断，是否启动成功，也可以通过重启服务器，来检验，是否生效。")]),s._v(" "),t("p",[s._v("估计重启服务器还不行，因为还没有添加 supervisor 进程的开机自启。")]),s._v(" "),t("p",[s._v("这个地方因为 CentOS 版本升级之后对服务的管理方式不同，因此创建的方式也不一样，我这里分别列出来。")]),s._v(" "),t("p",[s._v("1，如果是 CentOS-7。")]),s._v(" "),t("p",[s._v("进入 / lib/systemd/system 目录，并创建 supervisord.service 文件。")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@moban ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$cat")]),s._v(" /lib/systemd/system/supervisord.service\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Unit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Description")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("supervisord\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("After")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("network.target\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Service"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Type")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("forking\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ExecStart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/bin/supervisord -c /etc/supervisor/supervisord.conf\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ExecStop")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/bin/supervisorctl "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$OPTIONS")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shutdown")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ExecReload")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/bin/supervisorctl "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$OPTIONS")]),s._v(" reload\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("KillMode")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("process\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Restart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("on-failure\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("RestartSec")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("42s\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Install"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("WantedBy")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("multi-user.target\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("p",[s._v("2，如果是 CenOS6。")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@moban ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$cat")]),s._v("  /etc/rc.d/init.d/supervisord\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# supervisord   This scripts turns supervisord on")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Author:       Mike McGrath <mmcgrath@redhat.com> (based off yumupdatesd)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# chkconfig:    - 95 04")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# description:  supervisor is a process control utility.  It has a web based")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#               xmlrpc interface as well as a few other nifty features.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# processname:  supervisord")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# config: /etc/supervisord.conf")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# pidfile: /var/run/supervisord.pid")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# source function library")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" /etc/rc.d/init.d/functions\n \n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("RETVAL")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -n $"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Starting supervisord: "')]),s._v("\n    daemon "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"supervisord -c /etc/supervisor/supervisord.conf"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("RETVAL")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$RETVAL")]),s._v(" -eq "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" /var/lock/subsys/supervisord\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("stop")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -n $"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Stopping supervisord: "')]),s._v("\n    killproc supervisord\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$RETVAL")]),s._v(" -eq "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -f /var/lock/subsys/supervisord\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("restart")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    stop\n    start\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("\n  start"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    start\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  stop"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    stop\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  restart"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("force-reload"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("reload"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    restart\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  condrestart"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -f /var/lock/subsys/supervisord "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" restart\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  status"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    status supervisord\n    "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("RETVAL")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  *"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" $"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Usage: '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v(' {start|stop|status|restart|reload|force-reload|condrestart}"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("esac")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$RETVAL")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br")])]),t("h3",{attrs:{id:"_2-加入开机自启。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-加入开机自启。"}},[s._v("#")]),s._v(" 2，加入开机自启。")]),s._v(" "),t("p",[s._v("1，如果是 CentOS-7。")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("766")]),s._v(" /lib/systemd/system/supervisord.service\nsystemctl daemon-reload\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" supervisord.service\nsystemctl start supervisord\nsystemctl status supervisord\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("2，如果是 CenOS6。")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chkconfig")]),s._v(" supervisord on\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"_6-开启-web-管理。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-开启-web-管理。"}},[s._v("#")]),s._v(" 6，开启 web 管理。")]),s._v(" "),t("p",[s._v("一般情况都是使用 supervisorctl 在命令行进行管理，不过也可以玩一下开启 web 管理，然后再关掉就好了。")]),s._v(" "),t("p",[s._v("编辑配置文件：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/supervisor/supervisord.conf\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("inet_http_server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" inet "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TCP"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" server disabled by default\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:9001        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ip_address:port specifier, *:port "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" all iface"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("username")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("user              "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default is no username "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("open server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("password")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v("               "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default is no password "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("open server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")]),s._v("\n \n修改成：\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("inet_http_server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" inet "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TCP"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" server disabled by default\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".157.182:9001          "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ip_address:port specifier, *:port "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" all iface"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("username")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("user              "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default is no username "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("open server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("password")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v("               "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default is no password "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("open server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")]),s._v("\n \nport：绑定访问IP和端口，这里是绑定的是本机IP和9001端口（写上你自己的服务器IP或是本地IP）\nusername：登录管理后台的用户名\npassword：登录管理后台的密码\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("p",[s._v("访问一下：")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://t.eryajf.net/imgs/2021/09/4845b821575707c8.jpg",alt:"image"}})]),s._v(" "),t("h2",{attrs:{id:"_7-配置文件详解。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-配置文件详解。"}},[s._v("#")]),s._v(" 7，配置文件详解。")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("unix_http_server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("            \n \n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("file")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/tmp/supervisor.sock   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" socket文件的路径，supervisorctl用XML_RPC和supervisord通信就是通过它进行\n \n                              的。如果不设置的话，supervisorctl也就不能用了  \n \n                              不设置的话，默认为none。 非必须设置        \n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("chmod")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("0700                 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个简单，就是修改上面的那个socket文件的权限为0700\n \n                              不设置的话，默认为0700。 非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("chown")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("nobody:nogroup       "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个一样，修改上面的那个socket文件的属组为user.group\n \n                              不设置的话，默认为启动supervisord进程的用户及属组。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("username")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("user              "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 使用supervisorctl连接的时候，认证的用户\n \n                               不设置的话，默认为不需要用户。 非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("password")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v("               "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 和上面的用户名对应的密码，可以直接使用明码，也可以使用SHA加密\n \n                              如："),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("SHA"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("82ab876d1387bfafe46cc1c8a2ef074eae50cb1d\n \n                              默认不设置。。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("inet_http_server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 侦听在TCP上的socket，Web Server和远程的supervisorctl都要用到他\n \n                              不设置的话，默认为不开启。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:9001        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个是侦听的IP和端口，侦听所有IP用 :9001或*:9001。\n \n                              这个必须设置，只要上面的"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("inet_http_server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("开启了，就必须设置它\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("username")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("user              "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个和上面的uinx_http_server一个样。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("password")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v("               "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个也一个样。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("supervisord"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("这个主要是定义supervisord这个服务端进程的一些参数的\n \n                              这个必须设置，不设置，supervisor就不用干活了\n \n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("logfile")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/tmp/supervisord.log "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个是supervisord这个主进程的日志路径，注意和子进程的日志不搭嘎。\n \n                               默认路径"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$CWD")]),s._v("/supervisord.log，"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$CWD")]),s._v("是当前目录。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("logfile_maxbytes")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("50MB        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个是上面那个日志文件的最大的大小，当超过50M的时候，会生成一个新的日 \n \n                               志文件。当设置为0时，表示不限制文件大小\n \n                               默认值是50M，非必须设置。              \n \n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("logfile_backups")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("           "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 日志文件保持的数量，上面的日志文件大于50M时，就会生成一个新文件。文件\n \n                               数量大于10时，最初的老文件被新文件覆盖，文件数量将保持为10\n \n                               当设置为0时，表示不限制文件的数量。\n \n                               默认情况下为10。。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("loglevel")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("info                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 日志级别，有critical, error, warn, info, debug, trace, or blather等\n \n                               默认为info。。。非必须设置项\n \n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("pidfile")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/tmp/supervisord.pid "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" supervisord的pid文件路径。\n \n                               默认为"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$CWD")]),s._v("/supervisord.pid。。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("nodaemon")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false               "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 如果是true，supervisord进程将在前台运行\n \n                               默认为false，也就是后台以守护进程运行。。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("minfds")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),s._v("                  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个是最少系统空闲的文件描述符，低于这个值supervisor将不会启动。\n \n                               系统的文件描述符在这里设置cat /proc/sys/fs/file-max\n \n                               默认情况下为1024。。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("minprocs")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v("                 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 最小可用的进程描述符，低于这个值supervisor也将不会正常启动。\n \n                              "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("ulimit")]),s._v("  -u这个命令，可以查看linux下面用户的最大进程数\n \n                              默认为200。。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("umask")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("022                   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 进程创建文件的掩码\n \n                               默认为022。。非必须设置项\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("user")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("chrism                 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个参数可以设置一个非root用户，当我们以root用户启动supervisord之后。\n \n                               我这里面设置的这个用户，也可以对supervisord进行管理\n \n                               默认情况是不设置。。。非必须设置项\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("identifier")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("supervisor       "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个参数是supervisord的标识符，主要是给XML_RPC用的。当你有多个\n \n                               supervisor的时候，而且想调用XML_RPC统一管理，就需要为每个\n \n                               supervisor设置不同的标识符了\n \n                               默认是supervisord。。。非必需设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("directory")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/tmp              "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个参数是当supervisord作为守护进程运行的时候，设置这个参数的话，启动\n \n                               supervisord进程之前，会先切换到这个目录\n \n                               默认不设置。。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("nocleanup")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true              "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个参数当为false的时候，会在supervisord进程启动的时候，把以前子进程\n \n                               产生的日志文件"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("路径为AUTO的情况下"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("清除掉。有时候咱们想要看历史日志，当 \n \n                               然不想日志被清除了。所以可以设置为true\n \n                               默认是false，有调试需求的同学可以设置为true。。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("childlogdir")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/tmp            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 当子进程日志路径为AUTO的时候，子进程日志文件的存放路径。\n \n                               默认路径是这个东西，执行下面的这个命令看看就OK了，处理的东西就默认路径\n \n                               python -c "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"import tempfile;print tempfile.gettempdir()"')]),s._v("\n \n                               非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("environment")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("KEY"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value"')]),s._v("     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个是用来设置环境变量的，supervisord在linux中启动默认继承了linux的\n \n                               环境变量，在这里可以设置supervisord进程特有的其他环境变量。\n \n                               supervisord启动子进程时，子进程会拷贝父进程的内存空间内容。 所以设置的\n \n                               这些环境变量也会被子进程继承。\n \n                               小例子：environment"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"haha"')]),s._v(",age"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hehe"')]),s._v("\n \n                               默认为不设置。。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("strip_ansi")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个选项如果设置为true，会清除子进程日志中的所有ANSI 序列。什么是ANSI\n \n                               序列呢？就是我们的"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("n,"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("t这些东西。\n \n                               默认为false。。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" the below section must remain "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the config "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" RPC\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("supervisorctl/web interface"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" to work, additional interfaces may be\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" added by defining them "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" separate rpcinterface: sections\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("rpcinterface:supervisor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("这个选项是给XML_RPC用的，当然你如果想使用supervisord或者web server 这 \n \n                              个选项必须要开启的\n \nsupervisor.rpcinterface_factory "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" supervisor.rpcinterface:make_main_rpcinterface \n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("supervisorctl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("              "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("这个主要是针对supervisorctl的一些配置  \n \n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("serverurl")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("unix:///tmp/supervisor.sock "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个是supervisorctl本地连接supervisord的时候，本地UNIX socket\n \n                                        路径，注意这个是和前面的"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("unix_http_server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("对应的\n \n                                        默认值就是unix:///tmp/supervisor.sock。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("serverurl")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("http://127.0.0.1:9001 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个是supervisorctl远程连接supervisord的时候，用到的TCP socket路径\n \n                                   注意这个和前面的"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("inet_http_server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("对应\n \n                                   默认就是http://127.0.0.1:9001。。。非必须项\n \n \n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("username")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("chris              "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 用户名\n \n                               默认空。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("password")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v("                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 密码\n \n                              默认空。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("prompt")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("mysupervisor         "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 输入用户名密码时候的提示符\n \n                               默认supervisor。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("history_file")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=~")]),s._v("/.sc_history  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个参数和shell中的history类似，我们可以用上下键来查找前面执行过的命令\n \n                               默认是no file的。。所以我们想要有这种功能，必须指定一个文件。。。非\n \n                               必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" The below sample program section shows all possible program subsection values,\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" create one or "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'real'")]),s._v(" program: sections to be able to control them under\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" supervisor.\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("program:theprogramname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("这个就是咱们要管理的子进程了，"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('":"')]),s._v("后面的是名字，最好别乱写和实际进程\n \n                                有点关联最好。这样的program我们可以设置一个或多个，一个program就是\n \n                                要被管理的一个进程\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("command")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/bin/cat              "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个就是我们的要启动进程的命令路径了，可以带参数\n \n                                例子：/home/test.py -a "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hehe'")]),s._v("\n \n                                有一点需要注意的是，我们的command只能是那种在终端运行的进程，不能是\n \n                                守护进程。这个想想也知道了，比如说command"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("service httpd start。\n \n                                httpd这个进程被linux的service管理了，我们的supervisor再去启动这个命令\n \n                                这已经不是严格意义的子进程了。\n \n                                这个是个必须设置的项\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("process_name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("%"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("program_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("s "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个是进程名，如果我们下面的numprocs参数为1的话，就不用管这个参数\n \n                                 了，它默认值%"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("program_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("s也就是上面的那个program冒号后面的名字，\n \n                                 但是如果numprocs为多个的话，那就不能这么干了。想想也知道，不可能每个\n \n                                 进程都用同一个进程名吧。\n \n \n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("numprocs")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("                    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 启动进程的数目。当不为1时，就是进程池的概念，注意process_name的设置\n \n                                 默认为1    。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("directory")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/tmp                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 进程运行前，会前切换到这个目录\n \n                                 默认不设置。。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("umask")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("022                     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 进程掩码，默认none，非必须\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("priority")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("999")]),s._v("                  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 子进程启动关闭优先级，优先级低的，最先启动，关闭的时候最后关闭\n \n                                 默认值为999 。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("autostart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 如果是true的话，子进程将在supervisord启动后被自动启动\n \n                                 默认就是true   。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("autorestart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("unexpected        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个是设置子进程挂掉后自动重启的情况，有三个选项，false,unexpected\n \n                                 和true。如果为false的时候，无论什么情况下，都不会被重新启动，\n \n                                 如果为unexpected，只有当进程的退出码不在下面的exitcodes里面定义的退 \n \n                                 出码的时候，才会被自动重启。当为true的时候，只要子进程挂掉，将会被无\n \n                                 条件的重启\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("startsecs")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("                   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个选项是子进程启动多少秒之后，此时状态如果是running，则我们认为启\n \n                                 动成功了\n \n                                 默认值为1 。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("startretries")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 当进程启动失败后，最大尝试启动的次数。。当超过3次后，supervisor将把\n \n                                 此进程的状态置为FAIL\n \n                                 默认值为3 。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("exitcodes")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0,2")]),s._v("                 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 注意和上面的的autorestart"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("unexpected对应。。exitcodes里面的定义的\n \n                                 退出码是expected的。\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stopsignal")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("QUIT               "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 进程停止信号，可以为"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("TERM")]),s._v(", HUP, INT, QUIT, KILL, USR1, or USR2等信号\n \n                                  默认为"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("TERM")]),s._v(" 。。当用设定的信号去干掉进程，退出码会被认为是expected\n \n                                  非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stopwaitsecs")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("               "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个是当我们向子进程发送stopsignal信号后，到系统返回信息\n \n                                 给supervisord，所等待的最大时间。 超过这个时间，supervisord会向该\n \n                                 子进程发送一个强制kill的信号。\n \n                                 默认为10秒。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stopasgroup")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false             "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个东西主要用于，supervisord管理的子进程，这个子进程本身还有\n \n                                 子进程。那么我们如果仅仅干掉supervisord的子进程的话，子进程的子进程\n \n                                 有可能会变成孤儿进程。所以咱们可以设置可个选项，把整个该子进程的\n \n                                 整个进程组都干掉。 设置为true的话，一般killasgroup也会被设置为true。\n \n                                 需要注意的是，该选项发送的是stop信号\n \n                                 默认为false。。非必须设置。。\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("killasgroup")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false             "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个和上面的stopasgroup类似，不过发送的是kill信号\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("user")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("chrism                   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 如果supervisord是root启动，我们在这里设置这个非root用户，可以用来\n \n                                 管理该program\n \n                                 默认不设置。。。非必须设置项\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("redirect_stderr")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true          "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 如果为true，则stderr的日志会被写入stdout日志文件中\n \n                                 默认为false，非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stdout_logfile")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/a/path        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 子进程的stdout的日志路径，可以指定路径，AUTO，none等三个选项。\n \n                                 设置为none的话，将没有日志产生。设置为AUTO的话，将随机找一个地方\n \n                                 生成日志文件，而且当supervisord重新启动的时候，以前的日志文件会被\n \n                                 清空。当 "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("redirect_stderr")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true的时候，sterr也会写进这个日志文件\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stdout_logfile_maxbytes")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("1MB   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 日志文件最大大小，和"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("supervisord"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("中定义的一样。默认为50\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stdout_logfile_backups")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 和"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("supervisord"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("定义的一样。默认10\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stdout_capture_maxbytes")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("1MB   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个东西是设定capture管道的大小，当值不为0的时候，子进程可以从stdout\n \n                                 发送信息，而supervisor可以根据信息，发送相应的event。\n \n                                 默认为0，为0的时候表达关闭管道。。。非必须项\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stdout_events_enabled")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 当设置为ture的时候，当子进程由stdout向文件描述符中写日志的时候，将\n \n                                 触发supervisord发送PROCESS_LOG_STDOUT类型的event\n \n                                 默认为false。。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stderr_logfile")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/a/path        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个东西是设置stderr写的日志路径，当redirect_stderr"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true。这个就不用\n \n                                 设置了，设置了也是白搭。因为它会被写入stdout_logfile的同一个文件中\n \n                                 默认为AUTO，也就是随便找个地存，supervisord重启被清空。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stderr_logfile_maxbytes")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("1MB   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个出现好几次了，就不重复了\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stderr_logfile_backups")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个也是\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stderr_capture_maxbytes")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("1MB   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个一样，和stdout_capture一样。 默认为0，关闭状态\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stderr_events_enabled")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个也是一样，默认为false\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("environment")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("A"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),s._v(",B"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2"')]),s._v("       "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个是该子进程的环境变量，和别的子进程是不共享的\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("serverurl")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("AUTO                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" The below sample eventlistener section shows all possible\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" eventlistener subsection values, create one or "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'real'")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" eventlistener: sections to be able to handle event notifications\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" sent by supervisor.\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("eventlistener:theeventlistenername"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("这个东西其实和program的地位是一样的，也是suopervisor启动的子进\n \n                                       程，不过它干的活是订阅supervisord发送的event。他的名字就叫\n \n                                       listener了。我们可以在listener里面做一系列处理，比如报警等等\n \n                                       楼主这两天干的活，就是弄的这玩意\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("command")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/bin/eventlistener    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个和上面的program一样，表示listener的可执行文件的路径\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("process_name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("%"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("program_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("s "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个也一样，进程名，当下面的numprocs为多个的时候，才需要。否则默认就\n \n                                 OK了\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("numprocs")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("                    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 相同的listener启动的个数\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("events")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("EVENT                  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" event事件的类型，也就是说，只有写在这个地方的事件类型。才会被发送\n \n \n \n \n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("buffer_size")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个是event队列缓存大小，单位不太清楚，楼主猜测应该是个吧。当buffer\n \n                                 超过10的时候，最旧的event将会被清除，并把新的event放进去。\n \n                                 默认值为10。。非必须选项\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("directory")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/tmp                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 进程执行前，会切换到这个目录下执行\n \n                                 默认为不切换。。。非必须\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("umask")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("022                     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 淹没，默认为none，不说了\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("priority")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("-1                   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 启动优先级，默认-1，也不扯了\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("autostart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 是否随supervisord启动一起启动，默认true\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("autorestart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("unexpected        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 是否自动重启，和program一个样，分true,false,unexpected等，注意\n \n                                  unexpected和exitcodes的关系\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("startsecs")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("                   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 也是一样，进程启动后跑了几秒钟，才被认定为成功启动，默认1\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("startretries")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 失败最大尝试次数，默认3\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("exitcodes")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0,2")]),s._v("                 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 期望或者说预料中的进程退出码，\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stopsignal")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("QUIT               "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 干掉进程的信号，默认为"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("TERM")]),s._v("，比如设置为QUIT，那么如果QUIT来干这个进程\n \n                                 那么会被认为是正常维护，退出码也被认为是expected中的\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stopwaitsecs")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("               "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" max num secs to "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wait")]),s._v(" b4 SIGKILL "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stopasgroup")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false             "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" send stop signal to the UNIX process group "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("killasgroup")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false             "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" SIGKILL the UNIX process group "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("def "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("user")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("chrism                   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("设置普通用户，可以用来管理该listener进程。\n \n                                默认为空。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("redirect_stderr")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true          "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 为true的话，stderr的log会并入stdout的log里面\n \n                                默认为false。。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stdout_logfile")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/a/path        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个不说了，好几遍了\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stdout_logfile_maxbytes")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("1MB   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个也是\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stdout_logfile_backups")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个也是\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stdout_events_enabled")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个其实是错的，listener是不能发送event\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stderr_logfile")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/a/path        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个也是\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stderr_logfile_maxbytes")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("1MB   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个也是\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("stderr_logfile_backups        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个不说了\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stderr_events_enabled")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个也是错的，listener不能发送event\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("environment")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("A"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),s._v(",B"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2"')]),s._v("       "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这个是该子进程的环境变量\n \n                                 默认为空。。。非必须设置\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("serverurl")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("AUTO                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" override serverurl computation "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("childutils"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" The below sample group section shows all possible group values,\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" create one or "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'real'")]),s._v(" group: sections to create "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"heterogeneous"')]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" process groups.\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("group:thegroupname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("这个东西就是给programs分组，划分到组里面的program。我们就不用一个一个去操作了\n \n                         我们可以对组名进行统一的操作。 注意：program被划分到组里面之后，就相当于原来\n \n                         的配置从supervisor的配置文件里消失了。。。supervisor只会对组进行管理，而不再\n \n                         会对组里面的单个program进行管理了\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("programs")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("progname1,progname2  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 组成员，用逗号分开\n \n                                 这个是个必须的设置项\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("priority")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("999")]),s._v("                  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 优先级，相对于组和组之间说的\n \n                                 默认999。。非必须选项\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" The "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("include"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" section can just contain the "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"files"')]),s._v(" setting.  This\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" setting can list multiple files "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("separated by whitespace or\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" newlines"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".  It can also contain wildcards.  The filenames are\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" interpreted as relative to this file.  Included files *cannot*\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" include files themselves.\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("include"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("                         "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("这个东西挺有用的，当我们要管理的进程很多的时候，写在一个文件里面\n \n                                    就有点大了。我们可以把配置信息写到多个文件中，然后include过来\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("files "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" relative/directory/*.ini\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br"),t("span",{staticClass:"line-number"},[s._v("72")]),t("br"),t("span",{staticClass:"line-number"},[s._v("73")]),t("br"),t("span",{staticClass:"line-number"},[s._v("74")]),t("br"),t("span",{staticClass:"line-number"},[s._v("75")]),t("br"),t("span",{staticClass:"line-number"},[s._v("76")]),t("br"),t("span",{staticClass:"line-number"},[s._v("77")]),t("br"),t("span",{staticClass:"line-number"},[s._v("78")]),t("br"),t("span",{staticClass:"line-number"},[s._v("79")]),t("br"),t("span",{staticClass:"line-number"},[s._v("80")]),t("br"),t("span",{staticClass:"line-number"},[s._v("81")]),t("br"),t("span",{staticClass:"line-number"},[s._v("82")]),t("br"),t("span",{staticClass:"line-number"},[s._v("83")]),t("br"),t("span",{staticClass:"line-number"},[s._v("84")]),t("br"),t("span",{staticClass:"line-number"},[s._v("85")]),t("br"),t("span",{staticClass:"line-number"},[s._v("86")]),t("br"),t("span",{staticClass:"line-number"},[s._v("87")]),t("br"),t("span",{staticClass:"line-number"},[s._v("88")]),t("br"),t("span",{staticClass:"line-number"},[s._v("89")]),t("br"),t("span",{staticClass:"line-number"},[s._v("90")]),t("br"),t("span",{staticClass:"line-number"},[s._v("91")]),t("br"),t("span",{staticClass:"line-number"},[s._v("92")]),t("br"),t("span",{staticClass:"line-number"},[s._v("93")]),t("br"),t("span",{staticClass:"line-number"},[s._v("94")]),t("br"),t("span",{staticClass:"line-number"},[s._v("95")]),t("br"),t("span",{staticClass:"line-number"},[s._v("96")]),t("br"),t("span",{staticClass:"line-number"},[s._v("97")]),t("br"),t("span",{staticClass:"line-number"},[s._v("98")]),t("br"),t("span",{staticClass:"line-number"},[s._v("99")]),t("br"),t("span",{staticClass:"line-number"},[s._v("100")]),t("br"),t("span",{staticClass:"line-number"},[s._v("101")]),t("br"),t("span",{staticClass:"line-number"},[s._v("102")]),t("br"),t("span",{staticClass:"line-number"},[s._v("103")]),t("br"),t("span",{staticClass:"line-number"},[s._v("104")]),t("br"),t("span",{staticClass:"line-number"},[s._v("105")]),t("br"),t("span",{staticClass:"line-number"},[s._v("106")]),t("br"),t("span",{staticClass:"line-number"},[s._v("107")]),t("br"),t("span",{staticClass:"line-number"},[s._v("108")]),t("br"),t("span",{staticClass:"line-number"},[s._v("109")]),t("br"),t("span",{staticClass:"line-number"},[s._v("110")]),t("br"),t("span",{staticClass:"line-number"},[s._v("111")]),t("br"),t("span",{staticClass:"line-number"},[s._v("112")]),t("br"),t("span",{staticClass:"line-number"},[s._v("113")]),t("br"),t("span",{staticClass:"line-number"},[s._v("114")]),t("br"),t("span",{staticClass:"line-number"},[s._v("115")]),t("br"),t("span",{staticClass:"line-number"},[s._v("116")]),t("br"),t("span",{staticClass:"line-number"},[s._v("117")]),t("br"),t("span",{staticClass:"line-number"},[s._v("118")]),t("br"),t("span",{staticClass:"line-number"},[s._v("119")]),t("br"),t("span",{staticClass:"line-number"},[s._v("120")]),t("br"),t("span",{staticClass:"line-number"},[s._v("121")]),t("br"),t("span",{staticClass:"line-number"},[s._v("122")]),t("br"),t("span",{staticClass:"line-number"},[s._v("123")]),t("br"),t("span",{staticClass:"line-number"},[s._v("124")]),t("br"),t("span",{staticClass:"line-number"},[s._v("125")]),t("br"),t("span",{staticClass:"line-number"},[s._v("126")]),t("br"),t("span",{staticClass:"line-number"},[s._v("127")]),t("br"),t("span",{staticClass:"line-number"},[s._v("128")]),t("br"),t("span",{staticClass:"line-number"},[s._v("129")]),t("br"),t("span",{staticClass:"line-number"},[s._v("130")]),t("br"),t("span",{staticClass:"line-number"},[s._v("131")]),t("br"),t("span",{staticClass:"line-number"},[s._v("132")]),t("br"),t("span",{staticClass:"line-number"},[s._v("133")]),t("br"),t("span",{staticClass:"line-number"},[s._v("134")]),t("br"),t("span",{staticClass:"line-number"},[s._v("135")]),t("br"),t("span",{staticClass:"line-number"},[s._v("136")]),t("br"),t("span",{staticClass:"line-number"},[s._v("137")]),t("br"),t("span",{staticClass:"line-number"},[s._v("138")]),t("br"),t("span",{staticClass:"line-number"},[s._v("139")]),t("br"),t("span",{staticClass:"line-number"},[s._v("140")]),t("br"),t("span",{staticClass:"line-number"},[s._v("141")]),t("br"),t("span",{staticClass:"line-number"},[s._v("142")]),t("br"),t("span",{staticClass:"line-number"},[s._v("143")]),t("br"),t("span",{staticClass:"line-number"},[s._v("144")]),t("br"),t("span",{staticClass:"line-number"},[s._v("145")]),t("br"),t("span",{staticClass:"line-number"},[s._v("146")]),t("br"),t("span",{staticClass:"line-number"},[s._v("147")]),t("br"),t("span",{staticClass:"line-number"},[s._v("148")]),t("br"),t("span",{staticClass:"line-number"},[s._v("149")]),t("br"),t("span",{staticClass:"line-number"},[s._v("150")]),t("br"),t("span",{staticClass:"line-number"},[s._v("151")]),t("br"),t("span",{staticClass:"line-number"},[s._v("152")]),t("br"),t("span",{staticClass:"line-number"},[s._v("153")]),t("br"),t("span",{staticClass:"line-number"},[s._v("154")]),t("br"),t("span",{staticClass:"line-number"},[s._v("155")]),t("br"),t("span",{staticClass:"line-number"},[s._v("156")]),t("br"),t("span",{staticClass:"line-number"},[s._v("157")]),t("br"),t("span",{staticClass:"line-number"},[s._v("158")]),t("br"),t("span",{staticClass:"line-number"},[s._v("159")]),t("br"),t("span",{staticClass:"line-number"},[s._v("160")]),t("br"),t("span",{staticClass:"line-number"},[s._v("161")]),t("br"),t("span",{staticClass:"line-number"},[s._v("162")]),t("br"),t("span",{staticClass:"line-number"},[s._v("163")]),t("br"),t("span",{staticClass:"line-number"},[s._v("164")]),t("br"),t("span",{staticClass:"line-number"},[s._v("165")]),t("br"),t("span",{staticClass:"line-number"},[s._v("166")]),t("br"),t("span",{staticClass:"line-number"},[s._v("167")]),t("br"),t("span",{staticClass:"line-number"},[s._v("168")]),t("br"),t("span",{staticClass:"line-number"},[s._v("169")]),t("br"),t("span",{staticClass:"line-number"},[s._v("170")]),t("br"),t("span",{staticClass:"line-number"},[s._v("171")]),t("br"),t("span",{staticClass:"line-number"},[s._v("172")]),t("br"),t("span",{staticClass:"line-number"},[s._v("173")]),t("br"),t("span",{staticClass:"line-number"},[s._v("174")]),t("br"),t("span",{staticClass:"line-number"},[s._v("175")]),t("br"),t("span",{staticClass:"line-number"},[s._v("176")]),t("br"),t("span",{staticClass:"line-number"},[s._v("177")]),t("br"),t("span",{staticClass:"line-number"},[s._v("178")]),t("br"),t("span",{staticClass:"line-number"},[s._v("179")]),t("br"),t("span",{staticClass:"line-number"},[s._v("180")]),t("br"),t("span",{staticClass:"line-number"},[s._v("181")]),t("br"),t("span",{staticClass:"line-number"},[s._v("182")]),t("br"),t("span",{staticClass:"line-number"},[s._v("183")]),t("br"),t("span",{staticClass:"line-number"},[s._v("184")]),t("br"),t("span",{staticClass:"line-number"},[s._v("185")]),t("br"),t("span",{staticClass:"line-number"},[s._v("186")]),t("br"),t("span",{staticClass:"line-number"},[s._v("187")]),t("br"),t("span",{staticClass:"line-number"},[s._v("188")]),t("br"),t("span",{staticClass:"line-number"},[s._v("189")]),t("br"),t("span",{staticClass:"line-number"},[s._v("190")]),t("br"),t("span",{staticClass:"line-number"},[s._v("191")]),t("br"),t("span",{staticClass:"line-number"},[s._v("192")]),t("br"),t("span",{staticClass:"line-number"},[s._v("193")]),t("br"),t("span",{staticClass:"line-number"},[s._v("194")]),t("br"),t("span",{staticClass:"line-number"},[s._v("195")]),t("br"),t("span",{staticClass:"line-number"},[s._v("196")]),t("br"),t("span",{staticClass:"line-number"},[s._v("197")]),t("br"),t("span",{staticClass:"line-number"},[s._v("198")]),t("br"),t("span",{staticClass:"line-number"},[s._v("199")]),t("br"),t("span",{staticClass:"line-number"},[s._v("200")]),t("br"),t("span",{staticClass:"line-number"},[s._v("201")]),t("br"),t("span",{staticClass:"line-number"},[s._v("202")]),t("br"),t("span",{staticClass:"line-number"},[s._v("203")]),t("br"),t("span",{staticClass:"line-number"},[s._v("204")]),t("br"),t("span",{staticClass:"line-number"},[s._v("205")]),t("br"),t("span",{staticClass:"line-number"},[s._v("206")]),t("br"),t("span",{staticClass:"line-number"},[s._v("207")]),t("br"),t("span",{staticClass:"line-number"},[s._v("208")]),t("br"),t("span",{staticClass:"line-number"},[s._v("209")]),t("br"),t("span",{staticClass:"line-number"},[s._v("210")]),t("br"),t("span",{staticClass:"line-number"},[s._v("211")]),t("br"),t("span",{staticClass:"line-number"},[s._v("212")]),t("br"),t("span",{staticClass:"line-number"},[s._v("213")]),t("br"),t("span",{staticClass:"line-number"},[s._v("214")]),t("br"),t("span",{staticClass:"line-number"},[s._v("215")]),t("br"),t("span",{staticClass:"line-number"},[s._v("216")]),t("br"),t("span",{staticClass:"line-number"},[s._v("217")]),t("br"),t("span",{staticClass:"line-number"},[s._v("218")]),t("br"),t("span",{staticClass:"line-number"},[s._v("219")]),t("br"),t("span",{staticClass:"line-number"},[s._v("220")]),t("br"),t("span",{staticClass:"line-number"},[s._v("221")]),t("br"),t("span",{staticClass:"line-number"},[s._v("222")]),t("br"),t("span",{staticClass:"line-number"},[s._v("223")]),t("br"),t("span",{staticClass:"line-number"},[s._v("224")]),t("br"),t("span",{staticClass:"line-number"},[s._v("225")]),t("br"),t("span",{staticClass:"line-number"},[s._v("226")]),t("br"),t("span",{staticClass:"line-number"},[s._v("227")]),t("br"),t("span",{staticClass:"line-number"},[s._v("228")]),t("br"),t("span",{staticClass:"line-number"},[s._v("229")]),t("br"),t("span",{staticClass:"line-number"},[s._v("230")]),t("br"),t("span",{staticClass:"line-number"},[s._v("231")]),t("br"),t("span",{staticClass:"line-number"},[s._v("232")]),t("br"),t("span",{staticClass:"line-number"},[s._v("233")]),t("br"),t("span",{staticClass:"line-number"},[s._v("234")]),t("br"),t("span",{staticClass:"line-number"},[s._v("235")]),t("br"),t("span",{staticClass:"line-number"},[s._v("236")]),t("br"),t("span",{staticClass:"line-number"},[s._v("237")]),t("br"),t("span",{staticClass:"line-number"},[s._v("238")]),t("br"),t("span",{staticClass:"line-number"},[s._v("239")]),t("br"),t("span",{staticClass:"line-number"},[s._v("240")]),t("br"),t("span",{staticClass:"line-number"},[s._v("241")]),t("br"),t("span",{staticClass:"line-number"},[s._v("242")]),t("br"),t("span",{staticClass:"line-number"},[s._v("243")]),t("br"),t("span",{staticClass:"line-number"},[s._v("244")]),t("br"),t("span",{staticClass:"line-number"},[s._v("245")]),t("br"),t("span",{staticClass:"line-number"},[s._v("246")]),t("br"),t("span",{staticClass:"line-number"},[s._v("247")]),t("br"),t("span",{staticClass:"line-number"},[s._v("248")]),t("br"),t("span",{staticClass:"line-number"},[s._v("249")]),t("br"),t("span",{staticClass:"line-number"},[s._v("250")]),t("br"),t("span",{staticClass:"line-number"},[s._v("251")]),t("br"),t("span",{staticClass:"line-number"},[s._v("252")]),t("br"),t("span",{staticClass:"line-number"},[s._v("253")]),t("br"),t("span",{staticClass:"line-number"},[s._v("254")]),t("br"),t("span",{staticClass:"line-number"},[s._v("255")]),t("br"),t("span",{staticClass:"line-number"},[s._v("256")]),t("br"),t("span",{staticClass:"line-number"},[s._v("257")]),t("br"),t("span",{staticClass:"line-number"},[s._v("258")]),t("br"),t("span",{staticClass:"line-number"},[s._v("259")]),t("br"),t("span",{staticClass:"line-number"},[s._v("260")]),t("br"),t("span",{staticClass:"line-number"},[s._v("261")]),t("br"),t("span",{staticClass:"line-number"},[s._v("262")]),t("br"),t("span",{staticClass:"line-number"},[s._v("263")]),t("br"),t("span",{staticClass:"line-number"},[s._v("264")]),t("br"),t("span",{staticClass:"line-number"},[s._v("265")]),t("br"),t("span",{staticClass:"line-number"},[s._v("266")]),t("br"),t("span",{staticClass:"line-number"},[s._v("267")]),t("br"),t("span",{staticClass:"line-number"},[s._v("268")]),t("br"),t("span",{staticClass:"line-number"},[s._v("269")]),t("br"),t("span",{staticClass:"line-number"},[s._v("270")]),t("br"),t("span",{staticClass:"line-number"},[s._v("271")]),t("br"),t("span",{staticClass:"line-number"},[s._v("272")]),t("br"),t("span",{staticClass:"line-number"},[s._v("273")]),t("br"),t("span",{staticClass:"line-number"},[s._v("274")]),t("br"),t("span",{staticClass:"line-number"},[s._v("275")]),t("br"),t("span",{staticClass:"line-number"},[s._v("276")]),t("br"),t("span",{staticClass:"line-number"},[s._v("277")]),t("br"),t("span",{staticClass:"line-number"},[s._v("278")]),t("br"),t("span",{staticClass:"line-number"},[s._v("279")]),t("br"),t("span",{staticClass:"line-number"},[s._v("280")]),t("br"),t("span",{staticClass:"line-number"},[s._v("281")]),t("br"),t("span",{staticClass:"line-number"},[s._v("282")]),t("br"),t("span",{staticClass:"line-number"},[s._v("283")]),t("br"),t("span",{staticClass:"line-number"},[s._v("284")]),t("br"),t("span",{staticClass:"line-number"},[s._v("285")]),t("br"),t("span",{staticClass:"line-number"},[s._v("286")]),t("br"),t("span",{staticClass:"line-number"},[s._v("287")]),t("br"),t("span",{staticClass:"line-number"},[s._v("288")]),t("br"),t("span",{staticClass:"line-number"},[s._v("289")]),t("br"),t("span",{staticClass:"line-number"},[s._v("290")]),t("br"),t("span",{staticClass:"line-number"},[s._v("291")]),t("br"),t("span",{staticClass:"line-number"},[s._v("292")]),t("br"),t("span",{staticClass:"line-number"},[s._v("293")]),t("br"),t("span",{staticClass:"line-number"},[s._v("294")]),t("br"),t("span",{staticClass:"line-number"},[s._v("295")]),t("br"),t("span",{staticClass:"line-number"},[s._v("296")]),t("br"),t("span",{staticClass:"line-number"},[s._v("297")]),t("br"),t("span",{staticClass:"line-number"},[s._v("298")]),t("br"),t("span",{staticClass:"line-number"},[s._v("299")]),t("br"),t("span",{staticClass:"line-number"},[s._v("300")]),t("br"),t("span",{staticClass:"line-number"},[s._v("301")]),t("br"),t("span",{staticClass:"line-number"},[s._v("302")]),t("br"),t("span",{staticClass:"line-number"},[s._v("303")]),t("br"),t("span",{staticClass:"line-number"},[s._v("304")]),t("br"),t("span",{staticClass:"line-number"},[s._v("305")]),t("br"),t("span",{staticClass:"line-number"},[s._v("306")]),t("br"),t("span",{staticClass:"line-number"},[s._v("307")]),t("br"),t("span",{staticClass:"line-number"},[s._v("308")]),t("br"),t("span",{staticClass:"line-number"},[s._v("309")]),t("br"),t("span",{staticClass:"line-number"},[s._v("310")]),t("br"),t("span",{staticClass:"line-number"},[s._v("311")]),t("br"),t("span",{staticClass:"line-number"},[s._v("312")]),t("br"),t("span",{staticClass:"line-number"},[s._v("313")]),t("br"),t("span",{staticClass:"line-number"},[s._v("314")]),t("br"),t("span",{staticClass:"line-number"},[s._v("315")]),t("br"),t("span",{staticClass:"line-number"},[s._v("316")]),t("br"),t("span",{staticClass:"line-number"},[s._v("317")]),t("br"),t("span",{staticClass:"line-number"},[s._v("318")]),t("br"),t("span",{staticClass:"line-number"},[s._v("319")]),t("br"),t("span",{staticClass:"line-number"},[s._v("320")]),t("br"),t("span",{staticClass:"line-number"},[s._v("321")]),t("br"),t("span",{staticClass:"line-number"},[s._v("322")]),t("br"),t("span",{staticClass:"line-number"},[s._v("323")]),t("br"),t("span",{staticClass:"line-number"},[s._v("324")]),t("br"),t("span",{staticClass:"line-number"},[s._v("325")]),t("br"),t("span",{staticClass:"line-number"},[s._v("326")]),t("br"),t("span",{staticClass:"line-number"},[s._v("327")]),t("br"),t("span",{staticClass:"line-number"},[s._v("328")]),t("br"),t("span",{staticClass:"line-number"},[s._v("329")]),t("br"),t("span",{staticClass:"line-number"},[s._v("330")]),t("br"),t("span",{staticClass:"line-number"},[s._v("331")]),t("br"),t("span",{staticClass:"line-number"},[s._v("332")]),t("br"),t("span",{staticClass:"line-number"},[s._v("333")]),t("br"),t("span",{staticClass:"line-number"},[s._v("334")]),t("br"),t("span",{staticClass:"line-number"},[s._v("335")]),t("br"),t("span",{staticClass:"line-number"},[s._v("336")]),t("br"),t("span",{staticClass:"line-number"},[s._v("337")]),t("br"),t("span",{staticClass:"line-number"},[s._v("338")]),t("br"),t("span",{staticClass:"line-number"},[s._v("339")]),t("br"),t("span",{staticClass:"line-number"},[s._v("340")]),t("br"),t("span",{staticClass:"line-number"},[s._v("341")]),t("br"),t("span",{staticClass:"line-number"},[s._v("342")]),t("br"),t("span",{staticClass:"line-number"},[s._v("343")]),t("br"),t("span",{staticClass:"line-number"},[s._v("344")]),t("br"),t("span",{staticClass:"line-number"},[s._v("345")]),t("br"),t("span",{staticClass:"line-number"},[s._v("346")]),t("br"),t("span",{staticClass:"line-number"},[s._v("347")]),t("br"),t("span",{staticClass:"line-number"},[s._v("348")]),t("br"),t("span",{staticClass:"line-number"},[s._v("349")]),t("br"),t("span",{staticClass:"line-number"},[s._v("350")]),t("br"),t("span",{staticClass:"line-number"},[s._v("351")]),t("br"),t("span",{staticClass:"line-number"},[s._v("352")]),t("br"),t("span",{staticClass:"line-number"},[s._v("353")]),t("br"),t("span",{staticClass:"line-number"},[s._v("354")]),t("br"),t("span",{staticClass:"line-number"},[s._v("355")]),t("br"),t("span",{staticClass:"line-number"},[s._v("356")]),t("br"),t("span",{staticClass:"line-number"},[s._v("357")]),t("br"),t("span",{staticClass:"line-number"},[s._v("358")]),t("br"),t("span",{staticClass:"line-number"},[s._v("359")]),t("br"),t("span",{staticClass:"line-number"},[s._v("360")]),t("br"),t("span",{staticClass:"line-number"},[s._v("361")]),t("br"),t("span",{staticClass:"line-number"},[s._v("362")]),t("br"),t("span",{staticClass:"line-number"},[s._v("363")]),t("br"),t("span",{staticClass:"line-number"},[s._v("364")]),t("br"),t("span",{staticClass:"line-number"},[s._v("365")]),t("br"),t("span",{staticClass:"line-number"},[s._v("366")]),t("br"),t("span",{staticClass:"line-number"},[s._v("367")]),t("br"),t("span",{staticClass:"line-number"},[s._v("368")]),t("br"),t("span",{staticClass:"line-number"},[s._v("369")]),t("br"),t("span",{staticClass:"line-number"},[s._v("370")]),t("br"),t("span",{staticClass:"line-number"},[s._v("371")]),t("br"),t("span",{staticClass:"line-number"},[s._v("372")]),t("br"),t("span",{staticClass:"line-number"},[s._v("373")]),t("br"),t("span",{staticClass:"line-number"},[s._v("374")]),t("br"),t("span",{staticClass:"line-number"},[s._v("375")]),t("br"),t("span",{staticClass:"line-number"},[s._v("376")]),t("br"),t("span",{staticClass:"line-number"},[s._v("377")]),t("br"),t("span",{staticClass:"line-number"},[s._v("378")]),t("br"),t("span",{staticClass:"line-number"},[s._v("379")]),t("br"),t("span",{staticClass:"line-number"},[s._v("380")]),t("br"),t("span",{staticClass:"line-number"},[s._v("381")]),t("br"),t("span",{staticClass:"line-number"},[s._v("382")]),t("br"),t("span",{staticClass:"line-number"},[s._v("383")]),t("br"),t("span",{staticClass:"line-number"},[s._v("384")]),t("br"),t("span",{staticClass:"line-number"},[s._v("385")]),t("br"),t("span",{staticClass:"line-number"},[s._v("386")]),t("br"),t("span",{staticClass:"line-number"},[s._v("387")]),t("br"),t("span",{staticClass:"line-number"},[s._v("388")]),t("br"),t("span",{staticClass:"line-number"},[s._v("389")]),t("br"),t("span",{staticClass:"line-number"},[s._v("390")]),t("br"),t("span",{staticClass:"line-number"},[s._v("391")]),t("br"),t("span",{staticClass:"line-number"},[s._v("392")]),t("br"),t("span",{staticClass:"line-number"},[s._v("393")]),t("br"),t("span",{staticClass:"line-number"},[s._v("394")]),t("br"),t("span",{staticClass:"line-number"},[s._v("395")]),t("br"),t("span",{staticClass:"line-number"},[s._v("396")]),t("br"),t("span",{staticClass:"line-number"},[s._v("397")]),t("br"),t("span",{staticClass:"line-number"},[s._v("398")]),t("br"),t("span",{staticClass:"line-number"},[s._v("399")]),t("br"),t("span",{staticClass:"line-number"},[s._v("400")]),t("br"),t("span",{staticClass:"line-number"},[s._v("401")]),t("br"),t("span",{staticClass:"line-number"},[s._v("402")]),t("br"),t("span",{staticClass:"line-number"},[s._v("403")]),t("br"),t("span",{staticClass:"line-number"},[s._v("404")]),t("br"),t("span",{staticClass:"line-number"},[s._v("405")]),t("br"),t("span",{staticClass:"line-number"},[s._v("406")]),t("br"),t("span",{staticClass:"line-number"},[s._v("407")]),t("br"),t("span",{staticClass:"line-number"},[s._v("408")]),t("br"),t("span",{staticClass:"line-number"},[s._v("409")]),t("br"),t("span",{staticClass:"line-number"},[s._v("410")]),t("br"),t("span",{staticClass:"line-number"},[s._v("411")]),t("br"),t("span",{staticClass:"line-number"},[s._v("412")]),t("br"),t("span",{staticClass:"line-number"},[s._v("413")]),t("br"),t("span",{staticClass:"line-number"},[s._v("414")]),t("br"),t("span",{staticClass:"line-number"},[s._v("415")]),t("br"),t("span",{staticClass:"line-number"},[s._v("416")]),t("br"),t("span",{staticClass:"line-number"},[s._v("417")]),t("br"),t("span",{staticClass:"line-number"},[s._v("418")]),t("br"),t("span",{staticClass:"line-number"},[s._v("419")]),t("br"),t("span",{staticClass:"line-number"},[s._v("420")]),t("br"),t("span",{staticClass:"line-number"},[s._v("421")]),t("br"),t("span",{staticClass:"line-number"},[s._v("422")]),t("br"),t("span",{staticClass:"line-number"},[s._v("423")]),t("br"),t("span",{staticClass:"line-number"},[s._v("424")]),t("br"),t("span",{staticClass:"line-number"},[s._v("425")]),t("br"),t("span",{staticClass:"line-number"},[s._v("426")]),t("br"),t("span",{staticClass:"line-number"},[s._v("427")]),t("br"),t("span",{staticClass:"line-number"},[s._v("428")]),t("br"),t("span",{staticClass:"line-number"},[s._v("429")]),t("br"),t("span",{staticClass:"line-number"},[s._v("430")]),t("br"),t("span",{staticClass:"line-number"},[s._v("431")]),t("br"),t("span",{staticClass:"line-number"},[s._v("432")]),t("br"),t("span",{staticClass:"line-number"},[s._v("433")]),t("br"),t("span",{staticClass:"line-number"},[s._v("434")]),t("br"),t("span",{staticClass:"line-number"},[s._v("435")]),t("br"),t("span",{staticClass:"line-number"},[s._v("436")]),t("br"),t("span",{staticClass:"line-number"},[s._v("437")]),t("br"),t("span",{staticClass:"line-number"},[s._v("438")]),t("br"),t("span",{staticClass:"line-number"},[s._v("439")]),t("br"),t("span",{staticClass:"line-number"},[s._v("440")]),t("br"),t("span",{staticClass:"line-number"},[s._v("441")]),t("br"),t("span",{staticClass:"line-number"},[s._v("442")]),t("br"),t("span",{staticClass:"line-number"},[s._v("443")]),t("br"),t("span",{staticClass:"line-number"},[s._v("444")]),t("br"),t("span",{staticClass:"line-number"},[s._v("445")]),t("br"),t("span",{staticClass:"line-number"},[s._v("446")]),t("br"),t("span",{staticClass:"line-number"},[s._v("447")]),t("br"),t("span",{staticClass:"line-number"},[s._v("448")]),t("br"),t("span",{staticClass:"line-number"},[s._v("449")]),t("br"),t("span",{staticClass:"line-number"},[s._v("450")]),t("br"),t("span",{staticClass:"line-number"},[s._v("451")]),t("br"),t("span",{staticClass:"line-number"},[s._v("452")]),t("br"),t("span",{staticClass:"line-number"},[s._v("453")]),t("br"),t("span",{staticClass:"line-number"},[s._v("454")]),t("br"),t("span",{staticClass:"line-number"},[s._v("455")]),t("br"),t("span",{staticClass:"line-number"},[s._v("456")]),t("br"),t("span",{staticClass:"line-number"},[s._v("457")]),t("br"),t("span",{staticClass:"line-number"},[s._v("458")]),t("br"),t("span",{staticClass:"line-number"},[s._v("459")]),t("br"),t("span",{staticClass:"line-number"},[s._v("460")]),t("br"),t("span",{staticClass:"line-number"},[s._v("461")]),t("br"),t("span",{staticClass:"line-number"},[s._v("462")]),t("br"),t("span",{staticClass:"line-number"},[s._v("463")]),t("br"),t("span",{staticClass:"line-number"},[s._v("464")]),t("br"),t("span",{staticClass:"line-number"},[s._v("465")]),t("br"),t("span",{staticClass:"line-number"},[s._v("466")]),t("br"),t("span",{staticClass:"line-number"},[s._v("467")]),t("br"),t("span",{staticClass:"line-number"},[s._v("468")]),t("br"),t("span",{staticClass:"line-number"},[s._v("469")]),t("br"),t("span",{staticClass:"line-number"},[s._v("470")]),t("br"),t("span",{staticClass:"line-number"},[s._v("471")]),t("br"),t("span",{staticClass:"line-number"},[s._v("472")]),t("br"),t("span",{staticClass:"line-number"},[s._v("473")]),t("br"),t("span",{staticClass:"line-number"},[s._v("474")]),t("br"),t("span",{staticClass:"line-number"},[s._v("475")]),t("br"),t("span",{staticClass:"line-number"},[s._v("476")]),t("br"),t("span",{staticClass:"line-number"},[s._v("477")]),t("br"),t("span",{staticClass:"line-number"},[s._v("478")]),t("br"),t("span",{staticClass:"line-number"},[s._v("479")]),t("br"),t("span",{staticClass:"line-number"},[s._v("480")]),t("br"),t("span",{staticClass:"line-number"},[s._v("481")]),t("br")])]),t("h2",{attrs:{id:"_8-参考文章。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-参考文章。"}},[s._v("#")]),s._v(" 8，参考文章。")]),s._v(" "),t("p",[s._v("网上文章千千万万，任何教了自己的，都是一种缘分。")]),s._v(" "),t("ul",[t("li",[s._v("https://blog.csdn.net/StriverFeng/article/details/80057304")]),s._v(" "),t("li",[s._v("https://blog.csdn.net/xieliaowa9231/article/details/79077873")]),s._v(" "),t("li",[s._v("https://www.jb51.net/article/118045.htm")]),s._v(" "),t("li",[s._v("https://blog.csdn.net/donggege214/article/details/80264811")])])])}),[],!1,null,null,null);a.default=e.exports}}]);
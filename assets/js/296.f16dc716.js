(window.webpackJsonp=window.webpackJsonp||[]).push([[296],{859:function(e,v,_){"use strict";_.r(v);var t=_(11),r=Object(t.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h2",{attrs:{id:"_1-感谢原作者。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-感谢原作者。"}},[e._v("#")]),e._v(" 1，感谢原作者。")]),e._v(" "),_("p",[e._v("某日下午，打算再一次手动搭建k8s的1.10版本，在网上搜索的时候，发现了如下开源地址：https://github.com/opsnull/follow-me-install-kubernetes-cluster ，当即就被其吸引，然后就给身边小伙伴进行分享，我当时还打趣对他说，我有一个预感了，他说什么预感，我说我预感今天晚上将是一个不眠夜了。")]),e._v(" "),_("p",[e._v("说这话一方面是因为我看到教程的PDF版本全文达到了一百七十多页，十分夸张，另一方面，我已暗下决心，打算追看下去，事实上，那天晚上的确是追到了两点多才下班回家，虽然没有把教程全部追完，但是也已经大有收获，大有学习了，在此，再一次，认真，隆重的感谢原作者，感谢他的这种开源以及认真努力（据教程中所见，貌似作者是凌晨四点完成的文档）的精神。")]),e._v(" "),_("p",[e._v("我所分享的，并未完全按照原来的文档内容，而是经过自己的部署，自己的理解，进行整理，编辑而成的，使之更加容易阅读，也更加容易理解一些，毕竟对于自己这种刚入门的情况来说，写的越详细，就会越容易领略其中精髓吧。")]),e._v(" "),_("p",[_("img",{attrs:{src:"http://t.eryajf.net/imgs/2021/09/71fffb15e0c9f5f9.jpg",alt:"image"}})]),e._v(" "),_("p",[e._v("接下来进入正式内容的分享。")]),e._v(" "),_("h2",{attrs:{id:"_2-组件版本"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-组件版本"}},[e._v("#")]),e._v(" 2，组件版本")]),e._v(" "),_("ul",[_("li",[e._v("Kubernetes 1.10.4")]),e._v(" "),_("li",[e._v("Docker 18.03.1-ce")]),e._v(" "),_("li",[e._v("Etcd 3.3.7")]),e._v(" "),_("li",[e._v("Flanneld 0.10.0")]),e._v(" "),_("li",[e._v("插件：\n"),_("ul",[_("li",[e._v("Coredns")]),e._v(" "),_("li",[e._v("Dashboard")]),e._v(" "),_("li",[e._v("Heapster (influxdb、grafana)")]),e._v(" "),_("li",[e._v("Metrics-Server")]),e._v(" "),_("li",[e._v("EFK (elasticsearch、fluentd、kibana)")])])]),e._v(" "),_("li",[e._v("镜像仓库：\n"),_("ul",[_("li",[e._v("docker registry")]),e._v(" "),_("li",[e._v("harbor")])])])]),e._v(" "),_("h2",{attrs:{id:"_3-主要配置策略"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-主要配置策略"}},[e._v("#")]),e._v(" 3，主要配置策略")]),e._v(" "),_("p",[_("code",[e._v("kube-apiserver：")])]),e._v(" "),_("ul",[_("li",[e._v("使用 keepalived 和 haproxy 实现 3 节点高可用；")]),e._v(" "),_("li",[e._v("关闭非安全端口 8080 和匿名访问；")]),e._v(" "),_("li",[e._v("在安全端口 6443 接收 https 请求；")]),e._v(" "),_("li",[e._v("严格的认证和授权策略 (x509、token、RBAC)；")]),e._v(" "),_("li",[e._v("开启 bootstrap token 认证，支持 kubelet TLS bootstrapping；")]),e._v(" "),_("li",[e._v("使用 https 访问 kubelet、etcd，加密通信；")])]),e._v(" "),_("p",[_("code",[e._v("kube-controller-manager：")])]),e._v(" "),_("ul",[_("li",[e._v("3 节点高可用；")]),e._v(" "),_("li",[e._v("关闭非安全端口，在安全端口 10252 接收 https 请求；")]),e._v(" "),_("li",[e._v("使用 kubeconfig 访问 apiserver 的安全端口；")]),e._v(" "),_("li",[e._v("自动 approve kubelet 证书签名请求 (CSR)，证书过期后自动轮转；")]),e._v(" "),_("li",[e._v("各 controller 使用自己的 ServiceAccount 访问 apiserver；")])]),e._v(" "),_("p",[_("code",[e._v("kube-scheduler：")])]),e._v(" "),_("ul",[_("li",[e._v("3 节点高可用；")]),e._v(" "),_("li",[e._v("使用 kubeconfig 访问 apiserver 的安全端口；")])]),e._v(" "),_("p",[_("code",[e._v("kubelet：")])]),e._v(" "),_("ul",[_("li",[e._v("使用 kubeadm 动态创建 bootstrap token，而不是在 apiserver 中静态配置；")]),e._v(" "),_("li",[e._v("使用 TLS bootstrap 机制自动生成 client 和 server 证书，过期后自动轮转；")]),e._v(" "),_("li",[e._v("在 KubeletConfiguration 类型的 JSON 文件配置主要参数；")]),e._v(" "),_("li",[e._v("关闭只读端口，在安全端口 10250 接收 https 请求，对请求进行认证和授权，拒绝匿名访问和非授权访问；")]),e._v(" "),_("li",[e._v("使用 kubeconfig 访问 apiserver 的安全端口；")])]),e._v(" "),_("p",[_("code",[e._v("kube-proxy：")])]),e._v(" "),_("ul",[_("li",[e._v("使用 kubeconfig 访问 apiserver 的安全端口；")]),e._v(" "),_("li",[e._v("在 KubeProxyConfiguration 类型的 JSON 文件配置主要参数；")]),e._v(" "),_("li",[e._v("使用 ipvs 代理模式；")])]),e._v(" "),_("p",[_("code",[e._v("集群插件：")])]),e._v(" "),_("ul",[_("li",[e._v("DNS：使用功能、性能更好的 coredns；")]),e._v(" "),_("li",[e._v("Dashboard：支持登录认证；")]),e._v(" "),_("li",[e._v("Metric：heapster、metrics-server，使用 https 访问 kubelet 安全端口；")]),e._v(" "),_("li",[e._v("Log：Elasticsearch、Fluend、Kibana；")]),e._v(" "),_("li",[e._v("Registry 镜像库：docker-registry、harbor；")])])])}),[],!1,null,null,null);v.default=r.exports}}]);